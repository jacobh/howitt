apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: howittplains-redirect-https
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
 name: howittplains-http
spec:
 acme:
   email: jacob@haslehurst.net
   # We use the staging server here for testing to avoid hitting
   server: https://acme-v02.api.letsencrypt.org/directory
   privateKeySecretRef:
     # if not existing, it will register a new account and stores it
     name: howittplains-issuer-account-key
   solvers:
     - http01:
         # The ingressClass used to create the necessary ingress routes
         ingress:
           class: traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: howitt
  annotations:
    cert-manager.io/issuer: "howittplains-http"
    # Add middleware annotation to enable redirect
    traefik.ingress.kubernetes.io/router.middlewares: default-howittplains-redirect-https@kubernetescrd
    # Specify that this ingress should listen on both HTTP and HTTPS
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
spec:
  tls:
   - hosts:
       - howittplains.net
       - www.howittplains.net
       - api.howittplains.net
     secretName: tls-howittplains-ingress-http
  rules:
  - host: howittplains.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: howitt-webui
            port:
              number: 80
  - host: www.howittplains.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: howitt-webui
            port:
              number: 80
  - host: api.howittplains.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: howitt-web-api
            port:
              number: 80