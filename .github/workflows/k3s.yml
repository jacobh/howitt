name: Kubernetes Deployment

env:
  REGISTRY: ghcr.io
  WEBUI_IMAGE_NAME: ${{ github.repository }}-webui
  WEB_API_IMAGE_NAME: ${{ github.repository }}-web-api
  WORKER_IMAGE_NAME: ${{ github.repository }}-worker

on:
  push:
    branches:
      - main

jobs:
    build-and-push-images:
        runs-on: ubuntu-latest
        environment: Production
        strategy:
          matrix:
            include:
              - name: webui
                image_name: ${{ github.repository }}-webui
                context: webui
                dockerfile: Dockerfile
              - name: web-api
                image_name: ${{ github.repository }}-web-api
                context: .
                dockerfile: howitt-web-api.Dockerfile
              - name: worker
                image_name: ${{ github.repository }}-worker
                context: .
                dockerfile: howitt-worker.Dockerfile

        permissions:
          contents: read
          packages: write
          attestations: write
          id-token: write

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in to the Container registry
          uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{ env.REGISTRY }}/${{ matrix.image_name }}
            tags: |
              type=ref,event=branch
              type=sha,format=long,prefix=sha-

        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: ${{ matrix.context }}
            file: ${{ matrix.context }}/${{ matrix.dockerfile }}
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v1
          with:
            subject-name: ${{ env.REGISTRY }}/${{ matrix.image_name }}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true

    deploy:
        needs: [build-and-push-images]
        runs-on: ubuntu-latest
        environment: Production

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Install kubectl
          uses: azure/setup-kubectl@v3

        - name: Configure kubectl
          run: |
            mkdir -p ~/.kube
            echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
            chmod 600 ~/.kube/config
        
        - name: Update image tags
          working-directory: ./k8s
          run: |
            sed -i "s/:main.*/:sha-${{ github.sha }}/" webui.yaml
            sed -i "s/:main.*/:sha-${{ github.sha }}/" web-api.yaml
            sed -i "s/:main.*/:sha-${{ github.sha }}/" worker.yaml

        - name: Deploy to Kubernetes
          working-directory: ./k8s
          run: |
            kubectl apply -f web-api.yaml,worker.yaml,webui.yaml,ingress.yml

        - name: Wait for deployments to be ready
          run: |
            kubectl rollout status deployment/howitt-worker
            kubectl rollout status deployment/howitt-web-api
            kubectl rollout status deployment/howitt-webui
